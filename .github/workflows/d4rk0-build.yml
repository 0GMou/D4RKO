name: build-mpv (Windows x64)

on:
  workflow_dispatch: {}
  # (Opcional) Compila semanal para detectar nuevas versiones
  schedule:
    - cron: "0 3 * * 1"

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest
    env:
      MSYSTEM: CLANG64
      CHERE_INVOKING: 1

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Instala MSYS2 + toolchain + deps
        uses: msys2/setup-msys2@v2
        with:
          msystem: clang64
          release: false
          install: >-
            base-devel
            git
            zip
            jq
            curl
            # Herramientas de compilación
            mingw-w64-clang-x86_64-toolchain
            mingw-w64-clang-x86_64-meson
            mingw-w64-clang-x86_64-ninja
            mingw-w64-clang-x86_64-python
            # Dependencias mpv
            mingw-w64-clang-x86_64-ffmpeg
            mingw-w64-clang-x86_64-libplacebo
            mingw-w64-clang-x86_64-libass
            mingw-w64-clang-x86_64-harfbuzz
            mingw-w64-clang-x86_64-uchardet
            # Para detectar DLLs y crear bundle portable
            mingw-w64-clang-x86_64-ntldd

      - name: Detecta la última release estable de mpv
        shell: bash
        run: |
          set -e
          TAG=$(curl -fsSL https://api.github.com/repos/mpv-player/mpv/releases/latest | jq -r .tag_name)
          echo "MPV_TAG=$TAG" >> $GITHUB_ENV
          echo "MPV_VER=${TAG#v}" >> $GITHUB_ENV
          echo "Última estable de mpv: $TAG"

      - name: Descarga el código fuente de mpv
        shell: bash
        run: |
          curl -fsSL -o mpv.tar.gz "https://github.com/mpv-player/mpv/archive/refs/tags/${MPV_TAG}.tar.gz"
          tar -xzf mpv.tar.gz
          mv "mpv-${MPV_VER}" mpv-src

      - name: Parchea macros FF_PROFILE_* → AV_PROFILE_*
        shell: bash
        working-directory: mpv-src
        run: |
          set -e
          sed -i 's/FF_PROFILE_ARIB_PROFILE_A/AV_PROFILE_ARIB_PROFILE_A/g' demux/demux_mkv.c
          sed -i 's/FF_PROFILE_ARIB_PROFILE_C/AV_PROFILE_ARIB_PROFILE_C/g' demux/demux_mkv.c
          sed -i 's/FF_PROFILE_UNKNOWN/AV_PROFILE_UNKNOWN/g' demux/demux_mkv.c

      - name: Configura (Meson)
        shell: msys2 {0}
        working-directory: mpv-src
        run: |
          meson setup build --buildtype=release

      - name: Compila
        shell: msys2 {0}
        working-directory: mpv-src
        run: |
          meson compile -C build

      - name: Empaqueta bundle portable con DLLs
        shell: msys2 {0}
        working-directory: mpv-src
        run: |
          set -e
          mkdir -p ../dist
          cp -v build/mpv.exe ../dist/
          cp -v build/mpv.com ../dist/ || true
          # Copia dependencias runtime detectadas por ntldd
          ntldd -R build/mpv.exe | awk '/=>/ && $3 ~ /\\.(dll|DLL)$/ {print $3}' | sort -u | xargs -I{} cp -uv {} ../dist/ || true
          cd ../dist
          /usr/bin/zip -9 -r "d4rk0.mpv-${MPV_VER}-windows-x64.zip" .

      - name: Sube artifact
        uses: actions/upload-artifact@v4
        with:
          name: d4rk0.mpv-${{ env.MPV_VER }}-windows-x64
          path: dist/d4rk0.mpv-${{ env.MPV_VER }}-windows-x64.zip

      - name: (Opcional) Crea release en GitHub con el zip
        if: github.event_name == 'workflow_dispatch'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: mpv-${{ env.MPV_TAG }}
          name: "d4rk0.mpv ${{ env.MPV_VER }} (Windows x64)"
          files: dist/d4rk0.mpv-${{ env.MPV_VER }}-windows-x64.zip
